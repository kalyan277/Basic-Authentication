[{"E:\\Personal\\Ecommerce\\client\\src\\index.js":"1","E:\\Personal\\Ecommerce\\client\\src\\App.js":"2","E:\\Personal\\Ecommerce\\client\\src\\reportWebVitals.js":"3","E:\\Personal\\Ecommerce\\client\\src\\pages\\Home.js":"4","E:\\Personal\\Ecommerce\\client\\src\\pages\\auth\\Login.js":"5","E:\\Personal\\Ecommerce\\client\\src\\pages\\auth\\Register.js":"6","E:\\Personal\\Ecommerce\\client\\src\\components\\nav\\Header.js":"7","E:\\Personal\\Ecommerce\\client\\src\\firebase.js":"8","E:\\Personal\\Ecommerce\\client\\src\\pages\\auth\\RegisterComplete.js":"9","E:\\Personal\\Ecommerce\\client\\src\\reducers\\index.js":"10","E:\\Personal\\Ecommerce\\client\\src\\reducers\\userReducer.js":"11","E:\\Personal\\Ecommerce\\client\\src\\pages\\auth\\ForgotPassword.js":"12"},{"size":773,"mtime":1610476398412,"results":"13","hashOfConfig":"14"},{"size":1428,"mtime":1610618107699,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":217,"mtime":1610619593302,"results":"17","hashOfConfig":"14"},{"size":3723,"mtime":1610619368972,"results":"18","hashOfConfig":"14"},{"size":1911,"mtime":1610619440298,"results":"19","hashOfConfig":"14"},{"size":1768,"mtime":1610563696440,"results":"20","hashOfConfig":"14"},{"size":772,"mtime":1610615369838,"results":"21","hashOfConfig":"14"},{"size":2102,"mtime":1610474061180,"results":"22","hashOfConfig":"14"},{"size":187,"mtime":1610476067516,"results":"23","hashOfConfig":"14"},{"size":259,"mtime":1610476458147,"results":"24","hashOfConfig":"14"},{"size":1769,"mtime":1610619241783,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"bmo5wc",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"28"},"E:\\Personal\\Ecommerce\\client\\src\\index.js",[],["57","58"],"E:\\Personal\\Ecommerce\\client\\src\\App.js",["59"],"import React, { Fragment,useEffect } from 'react';\nimport {Switch,Route} from 'react-router-dom'\nimport {ToastContainer} from 'react-toastify';\nimport \"react-toastify/dist/ReactToastify.css\"\nimport Header from './components/nav/Header';\nimport Login from './pages/auth/Login';\nimport Register from './pages/auth/Register';\nimport RegisterComplete from './pages/auth/RegisterComplete';\nimport Home from './pages/Home';\nimport {auth} from './firebase'\nimport {useDispatch} from 'react-redux';\nimport ForgotPassword from './pages/auth/ForgotPassword';\n\nconst App=()=> {\n  const dispatch =useDispatch();\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(async(user)=>{\n      if(user){\n        const idTokenResult =await user.getIdTokenResult()\n        dispatch({\n          type:'LOGGED_IN_USER',\n          payload:{\n            email:user.email,\n            token:idTokenResult.token,\n          },\n        });\n      }\n    })\n    return () => unsubscribe\n  }, [])\n  return (\n    <Fragment>\n      <Header/>\n       <ToastContainer/>\n       <Switch>\n        <Route path ='/' exact component={Home}/>\n        <Route path ='/login' component={Login}/>\n        <Route path ='/register' exact component={Register}/>\n        <Route path ='/register/complete' component={RegisterComplete}/>\n         <Route path ='/forgot/password' component={ForgotPassword}/>\n      </Switch>\n    </Fragment>\n  \n  );\n}\n\nexport default App;\n","E:\\Personal\\Ecommerce\\client\\src\\reportWebVitals.js",[],["60","61"],"E:\\Personal\\Ecommerce\\client\\src\\pages\\Home.js",[],"E:\\Personal\\Ecommerce\\client\\src\\pages\\auth\\Login.js",["62"],"import React,{useState,useEffect} from 'react'\r\nimport {toast} from 'react-toastify';\r\nimport { auth, googleAuthProvider } from '../../firebase';\r\nimport {  MailOutlined ,GoogleOutlined} from '@ant-design/icons';\r\nimport { Button } from 'antd';\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\n\r\n const Login = ({history}) =>{\r\n     const [email,setEmail]=useState('');\r\n     const [password,setPassword]=useState('');\r\n     const [loading,setLoading]=useState(false);\r\n     const {user} = useSelector(state =>({...state}))\r\n    useEffect(() => {\r\n    if(user && user.token){\r\n        history.push(\"/\")\r\n        }\r\n    }, [user])\r\n     let dispatch=useDispatch();\r\n     const handleSubmit = async (e)=>{\r\n         e.preventDefault();\r\n         setLoading(true);\r\n         try {\r\n         const result = await\r\n         \r\n         auth.signInWithEmailAndPassword(email,password);\r\n         const {user}= result;\r\n         const idTokenResult =await user.getIdTokenResult()\r\n         dispatch({\r\n             type:\"LOGGED_IN_USER\",\r\n             payload:{\r\n                 email:user.email,\r\n                 token:idTokenResult\r\n             }\r\n         });\r\n         history.push('/')\r\n         } catch (error) {\r\n             console.log(error);\r\n             setLoading(false);\r\n             toast.error(error.message)\r\n         }\r\n\r\n     }\r\n     const googleLogin = async() =>{\r\n         auth.signInWithPopup(googleAuthProvider)\r\n         .then(async (result)=>{\r\n             const {user} =result\r\n             const idTokenResult=await user.getIdTokenResult();\r\n             dispatch({\r\n                type:\"LOGGED_IN_USER\",\r\n                payload:{\r\n                    email:user.email,\r\n                    token:idTokenResult\r\n                },\r\n              });\r\n             history.push('/')\r\n            }).catch((err)=>{\r\n                toast.error(err.message)\r\n            })\r\n     }\r\n     const loginForm =()=>(\r\n     <form onSubmit={handleSubmit}>\r\n         <div className=\"form-group\">\r\n            <input type =\"email\" className=\"form-control\"\r\n            value ={email} \r\n            onChange={e=>setEmail(e.target.value)} \r\n            placeholder=\"Your Email\"\r\n            autoFocus/>\r\n         </div>\r\n         <div className=\"form-group\">\r\n            <input type =\"password\" className=\"form-control\"\r\n            value ={password} \r\n            onChange={e=>setPassword(e.target.value)} \r\n            placeholder=\"Your Password\"/>\r\n         </div>\r\n         <br/>\r\n         <Button onClick={handleSubmit} \r\n         type=\"primary\" className=\"mb-3\"\r\n         block shape=\"round\"\r\n         icon={<MailOutlined/>}\r\n         size=\"large\"\r\n         disabled={!email || password.length <6}\r\n         >Login with Email/Password\r\n         </Button>\r\n     </form>\r\n     );\r\n     \r\n    return (\r\n        <div className=\"container p-5\">\r\n          <div className=\"row\">\r\n              <div className=\"col-md-6 offset-md-3\">\r\n                  {loading ? \r\n                  (<h4 className=\"text-danger\">Loading...</h4>)\r\n                  :( <h4>Login</h4>)}\r\n                  {loginForm()}\r\n                    <Button onClick={googleLogin} \r\n                        type=\"danger\" \r\n                        className=\"mb-3\"\r\n                        block shape=\"round\"\r\n                        icon={<GoogleOutlined/>}\r\n                        size=\"large\">\r\n                        Login with Google\r\n                    </Button>\r\n                    <Link to=\"/forgot/password\" className=\"float-right text-danger\">\r\n                    Forgot Password</Link>\r\n              </div>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","E:\\Personal\\Ecommerce\\client\\src\\pages\\auth\\Register.js",["63"],"import React,{useState,useEffect} from 'react'\r\nimport {toast} from 'react-toastify';\r\nimport { auth } from '../../firebase';\r\nimport { Button } from 'antd';\r\nimport {useSelector} from 'react-redux'\r\n const Register = ({history}) =>{\r\n    const [email,setEmail]=useState('');\r\n    const {user} = useSelector(state =>({...state}))\r\n    useEffect(() => {\r\n    if(user && user.token){\r\n        history.push(\"/\")\r\n        }\r\n    }, [user])\r\n     const handleSubmit =async(e)=>{\r\n         e.preventDefault();\r\n         const config={\r\n             url:process.env.REACT_APP_REGISTER_REDIRECT_URL,\r\n             handleCodeInApp:true\r\n         }\r\n         try {\r\n            await auth.sendSignInLinkToEmail(email,config)\r\n            toast.success(`Email is Sent to ${email}.\r\n            Click the link to complete your registration.`);\r\n            //Save User Email In Local Storage\r\n            window.localStorage.setItem('emailForRegistration',email)\r\n            setEmail(\"\");\r\n         } catch (error) {\r\n             toast.error(error.message)\r\n         }\r\n       \r\n  \r\n     }\r\n     const registerForm =()=>(\r\n     <form onSubmit={handleSubmit}>\r\n         <input type =\"email\" className=\"form-control\"\r\n         value ={email} \r\n         onChange={e=>setEmail(e.target.value)} \r\n         placeholder=\"Your Email\"\r\n         autoFocus/>\r\n         <br />\r\n            <Button \r\n         type=\"primary\" className=\"mb-3\"\r\n         block shape=\"round\"\r\n         onClick={handleSubmit}\r\n         size=\"large\"\r\n         disabled={!email}\r\n         >Register\r\n         </Button>\r\n     </form>\r\n     );\r\n     \r\n    return (\r\n        <div className=\"container p-5\">\r\n          <div className=\"row\">\r\n              <div className=\"col-md-6 offset-md-3\">\r\n                  <h4>Register</h4>\r\n                {registerForm()}\r\n              </div>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;\r\n","E:\\Personal\\Ecommerce\\client\\src\\components\\nav\\Header.js",[],"E:\\Personal\\Ecommerce\\client\\src\\firebase.js",[],"E:\\Personal\\Ecommerce\\client\\src\\pages\\auth\\RegisterComplete.js",["64"],"import React,{useState,useEffect} from 'react'\r\nimport {toast} from 'react-toastify';\r\nimport { auth } from '../../firebase';\r\n const RegisterComplete = ({history}) =>{\r\n     const [email,setEmail]=useState('');\r\n      const [password,setPassword]=useState('');\r\n      useEffect(()=>{\r\n        setEmail(window.localStorage.getItem('emailForRegistration'))\r\n      },[])\r\n     const handleSubmit =async(e)=>{\r\n       e.preventDefault();\r\n       if(!email || !password){\r\n           toast.error(\"Email And Password Is Required\");\r\n           return;\r\n       }\r\n       if(password.length < 6){\r\n           toast.error(\"Password Must Be At Least Character Long\");\r\n           return;\r\n       }\r\n       try {\r\n           const result =await auth.signInWithEmailLink(\r\n               email,\r\n               window.location.href\r\n           )\r\n           if(result.user.emailVerified){\r\n               window.localStorage.removeItem(\"emailForRegistration\")\r\n               let user =auth.currentUser\r\n               await user.updatePassword(password);\r\n               const idTokenResult =await user.getIdTokenResult();\r\n               history.push('/')\r\n            }\r\n       } catch (error) {\r\n           toast.error(error.message)\r\n       }\r\n     }\r\n     const completeRegistrationForm =()=>(\r\n     <form onSubmit={handleSubmit}>\r\n         <input type =\"email\" className=\"form-control\"\r\n         value ={email} \r\n         onChange={e=>setEmail(e.target.value)} \r\n         autoFocus disabled/>\r\n          <input type =\"password\" className=\"form-control\"\r\n         value ={password} \r\n         onChange={e=>setPassword(e.target.value)} \r\n         autoFocus/>\r\n         <button type=\"submit\" className=\"btn btn-raised\">Register</button>\r\n     </form>\r\n     );\r\n     \r\n    return (\r\n        <div className=\"container p-5\">\r\n          <div className=\"row\">\r\n              <div className=\"col-md-6 offset-md-3\">\r\n                  <h4>Complete Registration </h4>\r\n                {completeRegistrationForm()}\r\n              </div>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterComplete;\r\n","E:\\Personal\\Ecommerce\\client\\src\\reducers\\index.js",[],"E:\\Personal\\Ecommerce\\client\\src\\reducers\\userReducer.js",[],"E:\\Personal\\Ecommerce\\client\\src\\pages\\auth\\ForgotPassword.js",["65","66","67","68"],"import React,{useState,useEffect} from 'react'\r\nimport {toast} from 'react-toastify';\r\nimport { auth } from '../../firebase';\r\nimport { Button } from 'antd';\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ForgotPassword =({history})=>{\r\n    const [email,setEmail]=useState('')\r\n    const [loading,setLoading]=useState(false)\r\n    const {user} = useSelector(state =>({...state}))\r\n    useEffect(() => {\r\n    if(user && user.token){\r\n        history.push(\"/\")\r\n        }\r\n    }, [user])\r\n    const handleSubmit = async(e)=>{\r\n        e.preventDefault();\r\n         const config={\r\n             url:process.env.REACT_APP_FORGOT_PASSWORD_REDIRECT_URL,\r\n             handleCodeInApp:true\r\n         }\r\n         try {\r\n            await auth.sendPasswordResetEmail(email,config)\r\n            setEmail('');\r\n            setLoading(false);\r\n            toast.success(\"Check Your Email For Password Reset Link\")\r\n         } catch (error) {\r\n             toast.error(error.message)\r\n         }\r\n\r\n    }\r\n    return(\r\n        <div className=\"container col-md-6 offset-md-3 p-5\">\r\n            {loading ? \r\n            (<h4 className=\"text-danger\">Loading...</h4>):\r\n            (<h4>Forgot Password</h4>\r\n            )}\r\n            <form onSubmit={handleSubmit}>\r\n                <input type =\"email\" className=\"form-control\"\r\n                value={email}\r\n                placeholder=\"Type Your Email\"\r\n                autoFocus\r\n                onChange={(e)=> setEmail(e.target.value)}></input>\r\n                <br/>\r\n                <button className=\"btn btn-raised\" disabled={!email}>\r\n                    Submit\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword;",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":30,"column":6,"nodeType":"75","endLine":30,"endColumn":8,"suggestions":"76"},{"ruleId":"69","replacedBy":"77"},{"ruleId":"71","replacedBy":"78"},{"ruleId":"73","severity":1,"message":"79","line":18,"column":8,"nodeType":"75","endLine":18,"endColumn":14,"suggestions":"80"},{"ruleId":"73","severity":1,"message":"79","line":13,"column":8,"nodeType":"75","endLine":13,"endColumn":14,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":29,"column":22,"nodeType":"84","messageId":"85","endLine":29,"endColumn":35},{"ruleId":"82","severity":1,"message":"86","line":4,"column":10,"nodeType":"84","messageId":"85","endLine":4,"endColumn":16},{"ruleId":"82","severity":1,"message":"87","line":5,"column":9,"nodeType":"84","messageId":"85","endLine":5,"endColumn":20},{"ruleId":"82","severity":1,"message":"88","line":6,"column":9,"nodeType":"84","messageId":"85","endLine":6,"endColumn":13},{"ruleId":"73","severity":1,"message":"79","line":16,"column":8,"nodeType":"75","endLine":16,"endColumn":14,"suggestions":"89"},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["92"],["90"],["91"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["93"],["94"],"no-unused-vars","'idTokenResult' is assigned a value but never used.","Identifier","unusedVar","'Button' is defined but never used.","'useDispatch' is defined but never used.","'Link' is defined but never used.",["95"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},{"desc":"98","fix":"100"},{"desc":"98","fix":"101"},"Update the dependencies array to be: [dispatch]",{"range":"102","text":"103"},"Update the dependencies array to be: [history, user]",{"range":"104","text":"105"},{"range":"106","text":"105"},{"range":"107","text":"105"},[973,975],"[dispatch]",[666,672],"[history, user]",[428,434],[531,537]]